/*
* generated by Xtext
*/
grammar InternalPSQT;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package no.pdigre.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package no.pdigre.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import no.pdigre.services.PSQTGrammarAccess;

}

@parser::members {
 
 	private PSQTGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(PSQTGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFDescription
entryRuleFDescription 
:
{ before(grammarAccess.getFDescriptionRule()); }
	 ruleFDescription
{ after(grammarAccess.getFDescriptionRule()); } 
	 EOF 
;

// Rule FDescription
ruleFDescription
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFDescriptionAccess().getGroup()); }
(rule__FDescription__Group__0)
{ after(grammarAccess.getFDescriptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTable
entryRuleTable 
:
{ before(grammarAccess.getTableRule()); }
	 ruleTable
{ after(grammarAccess.getTableRule()); } 
	 EOF 
;

// Rule Table
ruleTable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTableAccess().getGroup()); }
(rule__Table__Group__0)
{ after(grammarAccess.getTableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTDescription
entryRuleTDescription 
:
{ before(grammarAccess.getTDescriptionRule()); }
	 ruleTDescription
{ after(grammarAccess.getTDescriptionRule()); } 
	 EOF 
;

// Rule TDescription
ruleTDescription
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTDescriptionAccess().getGroup()); }
(rule__TDescription__Group__0)
{ after(grammarAccess.getTDescriptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTHeader
entryRuleTHeader 
:
{ before(grammarAccess.getTHeaderRule()); }
	 ruleTHeader
{ after(grammarAccess.getTHeaderRule()); } 
	 EOF 
;

// Rule THeader
ruleTHeader
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTHeaderAccess().getGroup()); }
(rule__THeader__Group__0)
{ after(grammarAccess.getTHeaderAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRow
entryRuleRow 
:
{ before(grammarAccess.getRowRule()); }
	 ruleRow
{ after(grammarAccess.getRowRule()); } 
	 EOF 
;

// Rule Row
ruleRow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRowAccess().getGroup()); }
(rule__Row__Group__0)
{ after(grammarAccess.getRowAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRowLabel
entryRuleRowLabel 
:
{ before(grammarAccess.getRowLabelRule()); }
	 ruleRowLabel
{ after(grammarAccess.getRowLabelRule()); } 
	 EOF 
;

// Rule RowLabel
ruleRowLabel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRowLabelAccess().getINTTerminalRuleCall()); }
	RULE_INT
{ after(grammarAccess.getRowLabelAccess().getINTTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMRow
entryRuleMRow 
:
{ before(grammarAccess.getMRowRule()); }
	 ruleMRow
{ after(grammarAccess.getMRowRule()); } 
	 EOF 
;

// Rule MRow
ruleMRow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMRowAccess().getNameAssignment()); }
(rule__MRow__NameAssignment)
{ after(grammarAccess.getMRowAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleERow
entryRuleERow 
:
{ before(grammarAccess.getERowRule()); }
	 ruleERow
{ after(grammarAccess.getERowRule()); } 
	 EOF 
;

// Rule ERow
ruleERow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getERowAccess().getNameAssignment()); }
(rule__ERow__NameAssignment)
{ after(grammarAccess.getERowAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRow1
entryRuleRow1 
:
{ before(grammarAccess.getRow1Rule()); }
	 ruleRow1
{ after(grammarAccess.getRow1Rule()); } 
	 EOF 
;

// Rule Row1
ruleRow1
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRow1Access().getGroup()); }
(rule__Row1__Group__0)
{ after(grammarAccess.getRow1Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule PieceType
rulePieceType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPieceTypeAccess().getAlternatives()); }
(rule__PieceType__Alternatives)
{ after(grammarAccess.getPieceTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__PieceType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPieceTypeAccess().getPAWNEnumLiteralDeclaration_0()); }
(	'Pawn' 
)
{ after(grammarAccess.getPieceTypeAccess().getPAWNEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getPieceTypeAccess().getKNIGHTEnumLiteralDeclaration_1()); }
(	'Knight' 
)
{ after(grammarAccess.getPieceTypeAccess().getKNIGHTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getPieceTypeAccess().getBISHOPEnumLiteralDeclaration_2()); }
(	'Bishop' 
)
{ after(grammarAccess.getPieceTypeAccess().getBISHOPEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getPieceTypeAccess().getROOKEnumLiteralDeclaration_3()); }
(	'Rook' 
)
{ after(grammarAccess.getPieceTypeAccess().getROOKEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getPieceTypeAccess().getQUEENEnumLiteralDeclaration_4()); }
(	'Queen' 
)
{ after(grammarAccess.getPieceTypeAccess().getQUEENEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getPieceTypeAccess().getKINGEnumLiteralDeclaration_5()); }
(	'King' 
)
{ after(grammarAccess.getPieceTypeAccess().getKINGEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getFDescriptionParserRuleCall_0()); }
	ruleFDescription
{ after(grammarAccess.getModelAccess().getFDescriptionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getTablesAssignment_1()); }
(rule__Model__TablesAssignment_1)*
{ after(grammarAccess.getModelAccess().getTablesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FDescription__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDescription__Group__0__Impl
	rule__FDescription__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FDescription__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDescriptionAccess().getPSQTTerminalRuleCall_0()); }
	RULE_PSQT
{ after(grammarAccess.getFDescriptionAccess().getPSQTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDescription__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDescription__Group__1__Impl
	rule__FDescription__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FDescription__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDescriptionAccess().getNameAssignment_1()); }
(rule__FDescription__NameAssignment_1)
{ after(grammarAccess.getFDescriptionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDescription__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDescription__Group__2__Impl
	rule__FDescription__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FDescription__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDescriptionAccess().getBASETerminalRuleCall_2()); }
	RULE_BASE
{ after(grammarAccess.getFDescriptionAccess().getBASETerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FDescription__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FDescription__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FDescription__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDescriptionAccess().getBaseAssignment_3()); }
(rule__FDescription__BaseAssignment_3)
{ after(grammarAccess.getFDescriptionAccess().getBaseAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Table__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group__0__Impl
	rule__Table__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getTDescriptionParserRuleCall_0()); }
	ruleTDescription
{ after(grammarAccess.getTableAccess().getTDescriptionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group__1__Impl
	rule__Table__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getTHeaderParserRuleCall_1()); }
	ruleTHeader
{ after(grammarAccess.getTableAccess().getTHeaderParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group__2__Impl
	rule__Table__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getRAssignment_2()); }
(rule__Table__RAssignment_2)
{ after(grammarAccess.getTableAccess().getRAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group__3__Impl
	rule__Table__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getRAssignment_3()); }
(rule__Table__RAssignment_3)
{ after(grammarAccess.getTableAccess().getRAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group__4__Impl
	rule__Table__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getRAssignment_4()); }
(rule__Table__RAssignment_4)
{ after(grammarAccess.getTableAccess().getRAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group__5__Impl
	rule__Table__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getRAssignment_5()); }
(rule__Table__RAssignment_5)
{ after(grammarAccess.getTableAccess().getRAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group__6__Impl
	rule__Table__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getRAssignment_6()); }
(rule__Table__RAssignment_6)
{ after(grammarAccess.getTableAccess().getRAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group__7__Impl
	rule__Table__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getRAssignment_7()); }
(rule__Table__RAssignment_7)
{ after(grammarAccess.getTableAccess().getRAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group__8__Impl
	rule__Table__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getRAssignment_8()); }
(rule__Table__RAssignment_8)
{ after(grammarAccess.getTableAccess().getRAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getRAssignment_9()); }
(rule__Table__RAssignment_9)
{ after(grammarAccess.getTableAccess().getRAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__TDescription__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TDescription__Group__0__Impl
	rule__TDescription__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TDescription__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTDescriptionAccess().getPIECETerminalRuleCall_0()); }
	RULE_PIECE
{ after(grammarAccess.getTDescriptionAccess().getPIECETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TDescription__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TDescription__Group__1__Impl
	rule__TDescription__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TDescription__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTDescriptionAccess().getNameAssignment_1()); }
(rule__TDescription__NameAssignment_1)
{ after(grammarAccess.getTDescriptionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TDescription__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TDescription__Group__2__Impl
	rule__TDescription__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TDescription__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTDescriptionAccess().getVALUETerminalRuleCall_2()); }
	RULE_VALUE
{ after(grammarAccess.getTDescriptionAccess().getVALUETerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TDescription__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TDescription__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TDescription__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTDescriptionAccess().getValueAssignment_3()); }
(rule__TDescription__ValueAssignment_3)
{ after(grammarAccess.getTDescriptionAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__THeader__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__THeader__Group__0__Impl
	rule__THeader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__THeader__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTHeaderAccess().getAKeyword_0()); }

	'A' 

{ after(grammarAccess.getTHeaderAccess().getAKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__THeader__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__THeader__Group__1__Impl
	rule__THeader__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__THeader__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTHeaderAccess().getBKeyword_1()); }

	'B' 

{ after(grammarAccess.getTHeaderAccess().getBKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__THeader__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__THeader__Group__2__Impl
	rule__THeader__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__THeader__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTHeaderAccess().getCKeyword_2()); }

	'C' 

{ after(grammarAccess.getTHeaderAccess().getCKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__THeader__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__THeader__Group__3__Impl
	rule__THeader__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__THeader__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTHeaderAccess().getDKeyword_3()); }

	'D' 

{ after(grammarAccess.getTHeaderAccess().getDKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__THeader__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__THeader__Group__4__Impl
	rule__THeader__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__THeader__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTHeaderAccess().getEKeyword_4()); }

	'E' 

{ after(grammarAccess.getTHeaderAccess().getEKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__THeader__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__THeader__Group__5__Impl
	rule__THeader__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__THeader__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTHeaderAccess().getFKeyword_5()); }

	'F' 

{ after(grammarAccess.getTHeaderAccess().getFKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__THeader__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__THeader__Group__6__Impl
	rule__THeader__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__THeader__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTHeaderAccess().getGKeyword_6()); }

	'G' 

{ after(grammarAccess.getTHeaderAccess().getGKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__THeader__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__THeader__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__THeader__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTHeaderAccess().getHKeyword_7()); }

	'H' 

{ after(grammarAccess.getTHeaderAccess().getHKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Row__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Row__Group__0__Impl
	rule__Row__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRowAccess().getNameAssignment_0()); }
(rule__Row__NameAssignment_0)
{ after(grammarAccess.getRowAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Row__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Row__Group__1__Impl
	rule__Row__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRowAccess().getMAssignment_1()); }
(rule__Row__MAssignment_1)
{ after(grammarAccess.getRowAccess().getMAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Row__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Row__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRowAccess().getEAssignment_2()); }
(rule__Row__EAssignment_2)
{ after(grammarAccess.getRowAccess().getEAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Row1__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Row1__Group__0__Impl
	rule__Row1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Row1__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRow1Access().getCAssignment_0()); }
(rule__Row1__CAssignment_0)
{ after(grammarAccess.getRow1Access().getCAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Row1__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Row1__Group__1__Impl
	rule__Row1__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Row1__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRow1Access().getCAssignment_1()); }
(rule__Row1__CAssignment_1)
{ after(grammarAccess.getRow1Access().getCAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Row1__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Row1__Group__2__Impl
	rule__Row1__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Row1__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRow1Access().getCAssignment_2()); }
(rule__Row1__CAssignment_2)
{ after(grammarAccess.getRow1Access().getCAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Row1__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Row1__Group__3__Impl
	rule__Row1__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Row1__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRow1Access().getCAssignment_3()); }
(rule__Row1__CAssignment_3)
{ after(grammarAccess.getRow1Access().getCAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Row1__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Row1__Group__4__Impl
	rule__Row1__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Row1__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRow1Access().getCAssignment_4()); }
(rule__Row1__CAssignment_4)
{ after(grammarAccess.getRow1Access().getCAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Row1__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Row1__Group__5__Impl
	rule__Row1__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Row1__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRow1Access().getCAssignment_5()); }
(rule__Row1__CAssignment_5)
{ after(grammarAccess.getRow1Access().getCAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Row1__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Row1__Group__6__Impl
	rule__Row1__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Row1__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRow1Access().getCAssignment_6()); }
(rule__Row1__CAssignment_6)
{ after(grammarAccess.getRow1Access().getCAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Row1__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Row1__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Row1__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRow1Access().getCAssignment_7()); }
(rule__Row1__CAssignment_7)
{ after(grammarAccess.getRow1Access().getCAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}



















rule__Model__TablesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getTablesTableParserRuleCall_1_0()); }
	ruleTable{ after(grammarAccess.getModelAccess().getTablesTableParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDescription__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDescriptionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFDescriptionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FDescription__BaseAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFDescriptionAccess().getBaseINTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getFDescriptionAccess().getBaseINTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Table__RAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getRRowParserRuleCall_2_0()); }
	ruleRow{ after(grammarAccess.getTableAccess().getRRowParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Table__RAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getRRowParserRuleCall_3_0()); }
	ruleRow{ after(grammarAccess.getTableAccess().getRRowParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Table__RAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getRRowParserRuleCall_4_0()); }
	ruleRow{ after(grammarAccess.getTableAccess().getRRowParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Table__RAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getRRowParserRuleCall_5_0()); }
	ruleRow{ after(grammarAccess.getTableAccess().getRRowParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Table__RAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getRRowParserRuleCall_6_0()); }
	ruleRow{ after(grammarAccess.getTableAccess().getRRowParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Table__RAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getRRowParserRuleCall_7_0()); }
	ruleRow{ after(grammarAccess.getTableAccess().getRRowParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Table__RAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getRRowParserRuleCall_8_0()); }
	ruleRow{ after(grammarAccess.getTableAccess().getRRowParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Table__RAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getRRowParserRuleCall_9_0()); }
	ruleRow{ after(grammarAccess.getTableAccess().getRRowParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TDescription__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTDescriptionAccess().getNamePieceTypeEnumRuleCall_1_0()); }
	rulePieceType{ after(grammarAccess.getTDescriptionAccess().getNamePieceTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TDescription__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTDescriptionAccess().getValueINTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getTDescriptionAccess().getValueINTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Row__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRowAccess().getNameRowLabelParserRuleCall_0_0()); }
	ruleRowLabel{ after(grammarAccess.getRowAccess().getNameRowLabelParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Row__MAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRowAccess().getMMRowParserRuleCall_1_0()); }
	ruleMRow{ after(grammarAccess.getRowAccess().getMMRowParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Row__EAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRowAccess().getEERowParserRuleCall_2_0()); }
	ruleERow{ after(grammarAccess.getRowAccess().getEERowParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MRow__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMRowAccess().getNameRow1ParserRuleCall_0()); }
	ruleRow1{ after(grammarAccess.getMRowAccess().getNameRow1ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ERow__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getERowAccess().getNameRow1ParserRuleCall_0()); }
	ruleRow1{ after(grammarAccess.getERowAccess().getNameRow1ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Row1__CAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRow1Access().getCINTTerminalRuleCall_0_0()); }
	RULE_INT{ after(grammarAccess.getRow1Access().getCINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Row1__CAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRow1Access().getCINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getRow1Access().getCINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Row1__CAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRow1Access().getCINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getRow1Access().getCINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Row1__CAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRow1Access().getCINTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getRow1Access().getCINTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Row1__CAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRow1Access().getCINTTerminalRuleCall_4_0()); }
	RULE_INT{ after(grammarAccess.getRow1Access().getCINTTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Row1__CAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRow1Access().getCINTTerminalRuleCall_5_0()); }
	RULE_INT{ after(grammarAccess.getRow1Access().getCINTTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Row1__CAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRow1Access().getCINTTerminalRuleCall_6_0()); }
	RULE_INT{ after(grammarAccess.getRow1Access().getCINTTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Row1__CAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRow1Access().getCINTTerminalRuleCall_7_0()); }
	RULE_INT{ after(grammarAccess.getRow1Access().getCINTTerminalRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_INT : '-'? ('0'..'9')+;

RULE_PSQT : 'PSQT:';

RULE_BASE : 'Base:';

RULE_PIECE : 'Piece:';

RULE_VALUE : 'Value:';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


